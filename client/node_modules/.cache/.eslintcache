[{"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\context\\AuthContext.js":"3","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\pages\\login\\Login.js":"4","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\pages\\home\\Home.js":"5","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\pages\\register\\Register.js":"6","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\pages\\profile\\Profile.js":"7","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\context\\AuthReducer.js":"8","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\topbar\\Topbar.js":"9","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\sidebar\\Sidebar.js":"10","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\feed\\Feed.js":"11","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\rightbar\\Rightbar.js":"12","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\dummyData.js":"13","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\closeFriend\\CloseFriend.js":"14","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\post\\Post.js":"15","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\online\\Online.js":"16","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\share\\Share.js":"17","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\apiCalls.js":"18"},{"size":348,"mtime":1699369191915,"results":"19","hashOfConfig":"20"},{"size":1305,"mtime":1699373256131,"results":"21","hashOfConfig":"20"},{"size":773,"mtime":1698354137423,"results":"22","hashOfConfig":"20"},{"size":2613,"mtime":1699920025748,"results":"23","hashOfConfig":"20"},{"size":468,"mtime":1699806880475,"results":"24","hashOfConfig":"20"},{"size":3406,"mtime":1699918904228,"results":"25","hashOfConfig":"20"},{"size":2509,"mtime":1699923530595,"results":"26","hashOfConfig":"20"},{"size":1041,"mtime":1698347702664,"results":"27","hashOfConfig":"20"},{"size":2647,"mtime":1699921916450,"results":"28","hashOfConfig":"20"},{"size":3121,"mtime":1694625718070,"results":"29","hashOfConfig":"20"},{"size":1265,"mtime":1699918146543,"results":"30","hashOfConfig":"20"},{"size":5369,"mtime":1699922999623,"results":"31","hashOfConfig":"20"},{"size":2822,"mtime":1699913959604,"results":"32","hashOfConfig":"20"},{"size":333,"mtime":1699811008290,"results":"33","hashOfConfig":"20"},{"size":3007,"mtime":1706226045855,"results":"34","hashOfConfig":"20"},{"size":461,"mtime":1699809595192,"results":"35","hashOfConfig":"20"},{"size":3542,"mtime":1706225639012,"results":"36","hashOfConfig":"20"},{"size":485,"mtime":1699729327651,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"g0dzsh",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\index.js",[],[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\App.js",[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\context\\AuthContext.js",[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\pages\\login\\Login.js",["98"],[],"import { CircularProgress } from \"@mui/material\";\r\nimport React, { useContext, useEffect, useRef } from \"react\";\r\nimport { loginCall } from \"../../apiCalls\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"./login.css\";\r\n\r\nconst Login = () => {\r\n    const { user } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n      if (user) {\r\n        navigate('/');\r\n      }\r\n    }, [user, navigate]);\r\n\r\n    const email = useRef();\r\n    const password = useRef();\r\n    const { isFetching, dispatch } = useContext(AuthContext);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        loginCall(\r\n        { email: email.current.value, password: password.current.value },\r\n        dispatch\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n          <div className=\"loginWrapper\">\r\n            <div className=\"loginLeft\">\r\n              <h3 className=\"loginLogo\">Kindness Network</h3>\r\n              <span className=\"loginDesc\">\r\n              Join Kindness Network, connect globally, and amplify charitable impact\r\n              </span>\r\n            </div>\r\n            <div className=\"loginRight\">\r\n              <form className=\"loginBox\" onSubmit={handleClick}>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  type=\"email\"\r\n                  required\r\n                  className=\"loginInput\"\r\n                  ref={email}\r\n                />\r\n                <input\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                  required\r\n                  minLength=\"6\"\r\n                  className=\"loginInput\"\r\n                  ref={password}\r\n                />\r\n                <button className=\"loginButton\" type=\"submit\" disabled={isFetching}>\r\n                  Log In\r\n                  {/* {isFetching ? (\r\n                    <CircularProgress color=\"white\" size=\"20px\" />\r\n                  ) : (\r\n                    \"Log In\"\r\n                  )} */}\r\n                </button>\r\n                <span className=\"loginForgot\">Forgot Password?</span>\r\n                <button className=\"loginRegisterButton\">\r\n                  Create a New Account\r\n                  {/* {isFetching ? (\r\n                    <CircularProgress color=\"white\" size=\"20px\" />\r\n                  ) : (\r\n                    \"Create a New Account\"\r\n                  )} */}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default Login;","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\pages\\home\\Home.js",[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\pages\\register\\Register.js",[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\pages\\profile\\Profile.js",["99"],[],"import \"./profile.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport Rightbar from \"../../components/rightbar/Rightbar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst Profile = () => {\r\n  const instance = axios.create({\r\n    baseURL: 'http://localhost:4000', // Set your custom base URL here\r\n  });\r\n\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [user, setUser] = useState({});\r\n  const username = useParams().username;\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n  const fetchUser = async () => {\r\n    const res = await instance.get(`/api/users?username=${username}`);\r\n    setUser(res.data.data);\r\n    setIsLoading(false);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [username]);\r\n\r\n\r\n  if (isLoading) {\r\n    // You can render a loading spinner or message while waiting for the data\r\n    return <p>Loading...</p>;\r\n  }\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <div className=\"profile\">\r\n        <Sidebar />\r\n        <div className=\"profileRight\">\r\n          <div className=\"profileRightTop\">\r\n            <div className=\"profileCover\">\r\n              <img\r\n                className=\"profileCoverImg\"\r\n                src={\r\n                  user?.coverPicture\r\n                    ? PF + user?.coverPicture\r\n                    : PF + \"person/noCover.png\"\r\n                    \r\n                }\r\n                alt=\"\"\r\n              />\r\n              <img\r\n                className=\"profileUserImg\"\r\n                src={\r\n                  user?.profilePicture\r\n                    ? PF + user?.profilePicture\r\n                    // : PF + \"person/noAvatar.png\"\r\n                    : PF + \"person/123.jpg\"\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"profileInfo\">\r\n              <h4 className=\"profileInfoName\">{user?.username}</h4>\r\n              {/* <span className=\"profileInfoDesc\">{user?.desc}</span> */}\r\n              <span className=\"profileInfoDesc\">Young computer science student, addicted success and learning</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"profileRightBottom\">\r\n            <Feed username={username} />\r\n            <Rightbar user={user} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\context\\AuthReducer.js",[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\topbar\\Topbar.js",[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\sidebar\\Sidebar.js",[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\feed\\Feed.js",["100"],[],"import { useContext, useEffect, useState } from \"react\";\r\nimport Share from \"../share/Share\";\r\nimport \"./feed.css\";\r\nimport Post from \"../post/Post\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\n\r\nconst Feed = ({ username }) => {\r\n    const instance = axios.create({\r\n        baseURL: 'http://localhost:4000', // Set your custom base URL here\r\n      });\r\n    const [posts, setPosts] = useState([]);\r\n    const { user } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n        const res = username\r\n            ? await instance.get(\"/api/posts/profile/\" + username)\r\n            : await instance.get(\"/api/posts/timeline/\" + user._id);\r\n        setPosts(\r\n            res.data.sort((p1, p2) => {\r\n            return new Date(p2.createdAt) - new Date(p1.createdAt);\r\n            })\r\n        );\r\n        };\r\n        fetchPosts();\r\n    }, [username, user._id]);\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n        <div className=\"feedWrapper\">\r\n            {(!username || username === user.username) && <Share />}\r\n            {posts.map((p) => (\r\n            <Post key={p._id} post={p} />\r\n            ))}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Feed;","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\rightbar\\Rightbar.js",["101"],[],"import \"./rightbar.css\";\r\nimport { Users } from \"../../dummyData\";\r\nimport Online from \"../online/Online\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\n\r\nconst Rightbar = ({user}) => {\r\n    const instance = axios.create({\r\n      baseURL: 'http://localhost:4000', // Set your custom base URL here\r\n    });\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const [friends, setFriends] = useState([]);\r\n    const { user: currentUser, dispatch } = useContext(AuthContext);\r\n\r\n    const [followed, setFollowed] = useState(\r\n      currentUser.followings.includes(user?.id)\r\n    );\r\n\r\n    useEffect(() => {\r\n      const getFriends = async () => {\r\n        try {\r\n          const friendList = await instance.get(\"/api/users/friends/\" + currentUser._id);\r\n          setFriends(friendList.data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      getFriends();\r\n    }, [user]);\r\n  \r\n    const handleClick = async () => {\r\n      try {\r\n        if (followed) {\r\n          await instance.put(`/api/users/${user._id}/unfollow`, {\r\n            userId: currentUser._id,\r\n          });\r\n          dispatch({ type: \"UNFOLLOW\", payload: user._id });\r\n        } else {\r\n          await instance.put(`/api/users/${user._id}/follow`, {\r\n            userId: currentUser._id,\r\n          });\r\n          dispatch({ type: \"FOLLOW\", payload: user._id });\r\n        }\r\n        setFollowed(!followed);\r\n      } catch (err) {\r\n      }\r\n    };\r\n    const HomeRightbar = () => {\r\n        return (\r\n            <>\r\n              <div className=\"birthdayContainer\">\r\n                <img className=\"birthdayImg\" src=\"assets/gift.png\" alt=\"\" />\r\n                <span className=\"birthdayText\">\r\n                  <b>Ghassen Helaoui </b> and <b>2 other friends</b> have a birhday today.\r\n                </span>\r\n              </div>\r\n              <img className=\"rightbarAd\" src=\"assets/ad.jpg\" alt=\"\" />\r\n              <h4 className=\"rightbarTitle\">Online Friends</h4>\r\n              <ul className=\"rightbarFriendList\">\r\n                {Users.map((u) => (\r\n                  <Online key={u.id} user={u} />\r\n                ))}\r\n              </ul>\r\n            </>\r\n          );\r\n        };\r\n    \r\n      const ProfileRightbar = () => {\r\n        return (\r\n          <>\r\n            {user?.username !== currentUser?.username && (\r\n              <button className=\"rightbarFollowButton\" onClick={handleClick}>\r\n                {followed ? \"Unfollow\" : \"Follow\"}\r\n                {followed ? <RemoveIcon /> : <AddIcon />}\r\n              </button>\r\n            )}\r\n            <h4 className=\"rightbarTitle\">User information</h4>\r\n            <div className=\"rightbarInfo\">\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">City:</span>\r\n                {/* <span className=\"rightbarInfoValue\">{user.city}</span> */}\r\n                <span className=\"rightbarInfoValue\">Ksour Essef, Mahdia</span>\r\n              </div>\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">From:</span>\r\n                {/* <span className=\"rightbarInfoValue\">{user.from}</span> */}\r\n                <span className=\"rightbarInfoValue\">Tunisia</span>\r\n              </div>\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">Age:</span>\r\n                {/* <span className=\"rightbarInfoValue\">{user.from}</span> */}\r\n                <span className=\"rightbarInfoValue\">23</span>\r\n              </div>\r\n              {/* <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">Relationship:</span>\r\n                <span className=\"rightbarInfoValue\">\r\n                  {user.relationship === 1\r\n                    ? \"Single\"\r\n                    : user.relationship === 1\r\n                    ? \"Married\"\r\n                    : \"-\"}\r\n                </span>\r\n              </div> */}\r\n            </div>\r\n            <h4 className=\"rightbarTitle\">User friends</h4>\r\n            <div className=\"rightbarFollowings\">\r\n              {friends.map((friend) => (\r\n                <Link\r\n                  to={\"/profile/\" + friend.username}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <div className=\"rightbarFollowing\">\r\n                    <img\r\n                      src={\r\n                        friend.profilePicture\r\n                          ? PF + friend.profilePicture\r\n                          : PF + \"person/noAvatar.png\"\r\n                      }\r\n                      alt=\"\"\r\n                      className=\"rightbarFollowingImg\"\r\n                    />\r\n                    <span className=\"rightbarFollowingName\">{friend.username}</span>\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </>\r\n        );\r\n      };\r\n      return (\r\n        <div className=\"rightbar\">\r\n          <div className=\"rightbarWrapper\">\r\n            {user ? <ProfileRightbar /> : <HomeRightbar />}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n \r\nexport default Rightbar;","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\dummyData.js",[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\closeFriend\\CloseFriend.js",[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\post\\Post.js",["102"],[],"import \"./post.css\";\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n// import { format } from \"timeago.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nconst Post = ({post}) => {\r\n  const instance = axios.create({\r\n    baseURL: 'http://localhost:4000', // Set your custom base URL here\r\n  });\r\n    const [like, setLike] = useState(post.likes.length);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [user, setUser] = useState({});\r\n\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const { user: currentUser } = useContext(AuthContext);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      setIsLiked(post.likes.includes(currentUser._id));\r\n    }, [currentUser._id, post.likes]);\r\n\r\n    useEffect(() => {\r\n      const fetchUser = async () => {\r\n        const res = await instance.get(`/api/users/${post.userId}`);\r\n        setUser(res.data.data);\r\n      };\r\n      fetchUser();\r\n    }, [post.userId]);\r\n\r\n    const likeHandler = () => {\r\n      try {\r\n        instance.put(\"/api/posts/\" + post._id + \"/like\", { userId: currentUser._id });\r\n      } catch (err) {}\r\n      setLike(isLiked ? like - 1 : like + 1);\r\n      setIsLiked(!isLiked);\r\n    };\r\n\r\n  return (\r\n    <div className=\"post\">\r\n    <div className=\"postWrapper\">\r\n      <div className=\"postTop\">\r\n        <div className=\"postTopLeft\">\r\n          <Link to={`/profile/${user.username}`}>\r\n            <img\r\n              className=\"postProfileImg\"\r\n              src={\r\n                user.profilePicture\r\n                  ? PF + user.profilePicture\r\n                  //: PF + \"person/noAvatar.png\"\r\n                  : PF + \"person/123.jpg\"\r\n              }\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n          <span className=\"postUsername\">{user.username}</span>\r\n          {/* <span className=\"postDate\">{(post.createdAt)}</span> */}\r\n          <span className=\"postDate\">3 mn ago ..</span>\r\n        </div>\r\n        <div className=\"postTopRight\">\r\n          <MoreVertIcon />\r\n        </div>\r\n      </div>\r\n      <div className=\"postCenter\">\r\n        <span className=\"postText\">{post?.desc}</span>\r\n        <img className=\"postImg\" src={ `${PF}${post?.img}`} alt=\"\" />\r\n      </div>\r\n      <div className=\"postBottom\">\r\n        <div className=\"postBottomLeft\">\r\n          <img\r\n            className=\"likeIcon\"\r\n            src={`${PF}like.png`}\r\n            onClick={likeHandler}\r\n            alt=\"\"\r\n          />\r\n          <img\r\n            className=\"likeIcon\"\r\n            src={`${PF}heart1.png`}\r\n            onClick={likeHandler}\r\n            alt=\"\"\r\n          />\r\n          <span className=\"postLikeCounter\">{like} people like it</span>\r\n        </div>\r\n        <div className=\"postBottomRight\">\r\n          <span className=\"postCommentText\">{post.comment} comments</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n \r\nexport default Post;","C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\online\\Online.js",[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\components\\share\\Share.js",[],[],"C:\\Users\\ASUS\\Desktop\\volunteer\\client\\src\\apiCalls.js",[],[],{"ruleId":"103","severity":1,"message":"104","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":30,"column":6,"nodeType":"109","endLine":30,"endColumn":16,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":28,"column":8,"nodeType":"109","endLine":28,"endColumn":28,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"113","line":34,"column":8,"nodeType":"109","endLine":34,"endColumn":14,"suggestions":"114"},{"ruleId":"107","severity":1,"message":"111","line":32,"column":8,"nodeType":"109","endLine":32,"endColumn":21,"suggestions":"115"},"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has a missing dependency: 'instance'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has missing dependencies: 'currentUser._id' and 'instance'. Either include them or remove the dependency array.",["118"],["119"],{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [fetchUser, username]",{"range":"128","text":"129"},"Update the dependencies array to be: [username, user._id, instance]",{"range":"130","text":"131"},"Update the dependencies array to be: [currentUser._id, instance, user]",{"range":"132","text":"133"},"Update the dependencies array to be: [instance, post.userId]",{"range":"134","text":"135"},[911,921],"[fetchUser, username]",[925,945],"[username, user._id, instance]",[1144,1150],"[currentUser._id, instance, user]",[1049,1062],"[instance, post.userId]"]
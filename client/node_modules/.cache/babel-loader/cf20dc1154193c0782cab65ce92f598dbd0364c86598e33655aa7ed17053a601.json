{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\volunteer\\\\client\\\\src\\\\components\\\\feed\\\\Feed.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport Share from \"../share/Share\";\nimport \"./feed.css\";\nimport Post from \"../post/Post\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = ({\n  username\n}) => {\n  _s();\n  const instance = axios.create({\n    baseURL: 'http://localhost:4000' // Set your custom base URL here\n  });\n\n  const [posts, setPosts] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n  log;\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = username ? await instance.get(\"/api/posts/profile/\" + username) : await instance.get(\"/api/posts/timeline/\" + user._id);\n      setPosts(res.data.sort((p1, p2) => {\n        return new Date(p2.createdAt) - new Date(p1.createdAt);\n      }));\n    };\n    fetchPosts();\n  }, [username, user._id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedWrapper\",\n      children: [(!username || username === user.username) && /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 59\n      }, this), posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n        post: p\n      }, p._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Feed, \"omHF6PJyNAaQxhbtLbXyaS78q/s=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["useContext","useEffect","useState","Share","Post","axios","AuthContext","jsxDEV","_jsxDEV","Feed","username","_s","instance","create","baseURL","posts","setPosts","user","log","fetchPosts","res","get","_id","data","sort","p1","p2","Date","createdAt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","post","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/volunteer/client/src/components/feed/Feed.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport Share from \"../share/Share\";\r\nimport \"./feed.css\";\r\nimport Post from \"../post/Post\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\n\r\nconst Feed = ({ username }) => {\r\n    const instance = axios.create({\r\n        baseURL: 'http://localhost:4000', // Set your custom base URL here\r\n      });\r\n    const [posts, setPosts] = useState([]);\r\n    const { user } = useContext(AuthContext);\r\n    log\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n        const res = username\r\n            ? await instance.get(\"/api/posts/profile/\" + username)\r\n            : await instance.get(\"/api/posts/timeline/\" + user._id);\r\n        setPosts(\r\n            res.data.sort((p1, p2) => {\r\n            return new Date(p2.createdAt) - new Date(p1.createdAt);\r\n            })\r\n        );\r\n        };\r\n        fetchPosts();\r\n    }, [username, user._id]);\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n        <div className=\"feedWrapper\">\r\n            {(!username || username === user.username) && <Share />}\r\n            {posts.map((p) => (\r\n            <Post key={p._id} post={p} />\r\n            ))}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Feed;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxD,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAM,CAAC;IAC1BC,OAAO,EAAE,uBAAuB,CAAE;EACpC,CAAC,CAAC;;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEe;EAAK,CAAC,GAAGjB,UAAU,CAACM,WAAW,CAAC;EACxCY,GAAG;EAEHjB,SAAS,CAAC,MAAM;IACZ,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,GAAG,GAAGV,QAAQ,GACd,MAAME,QAAQ,CAACS,GAAG,CAAC,qBAAqB,GAAGX,QAAQ,CAAC,GACpD,MAAME,QAAQ,CAACS,GAAG,CAAC,sBAAsB,GAAGJ,IAAI,CAACK,GAAG,CAAC;MAC3DN,QAAQ,CACJI,GAAG,CAACG,IAAI,CAACC,IAAI,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAK;QAC1B,OAAO,IAAIC,IAAI,CAACD,EAAE,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,EAAE,CAACG,SAAS,CAAC;MACtD,CAAC,CACL,CAAC;IACD,CAAC;IACDT,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACT,QAAQ,EAAEO,IAAI,CAACK,GAAG,CAAC,CAAC;EAExB,oBACId,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACrBtB,OAAA;MAAKqB,SAAS,EAAC,aAAa;MAAAC,QAAA,GACvB,CAAC,CAACpB,QAAQ,IAAIA,QAAQ,KAAKO,IAAI,CAACP,QAAQ,kBAAKF,OAAA,CAACL,KAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACtDnB,KAAK,CAACoB,GAAG,CAAEC,CAAC,iBACb5B,OAAA,CAACJ,IAAI;QAAaiC,IAAI,EAAED;MAAE,GAAfA,CAAC,CAACd,GAAG;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAvB,EAAA,CAhCKF,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}